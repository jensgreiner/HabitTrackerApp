package com.greiner_co.habittrackerapp.data;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;

import com.greiner_co.habittrackerapp.data.HabitContract.HabitEntry;

/**
 * Custom SQLiteOpenHelper class for database handling
 * Created by Jens Greiner on 08.07.17.
 */

public class HabitDbHelper extends SQLiteOpenHelper {

    private static final String LOG_TAG = HabitDbHelper.class.getSimpleName();

    // Name of the database
    private static final String DATABASE_NAME = "habits.db";

    // Version of the database
    private static final int DATABASE_VERSION = 1;

    public HabitDbHelper(Context context) {
        super(context, DATABASE_NAME, null, DATABASE_VERSION);
    }

    @Override
    public void onCreate(SQLiteDatabase db) {
        String SQL_CREATE_HABITS_TABLE = "CREATE TABLE " + HabitEntry.TABLE_NAME + " ("
                + HabitEntry._ID + " INTEGER PRIMARY KEY AUTOINCREMENT, "
                + HabitEntry.COLUMN_HABIT_TITLE + " TEXT NOT NULL, "
                + HabitEntry.COLUMN_HABIT_DESC + " TEXT, "
                + HabitEntry.COLUMN_HABIT_COUNT + " INTEGER NOT NULL DEFAULT 0);";

        Log.v(LOG_TAG, SQL_CREATE_HABITS_TABLE);

        db.execSQL(SQL_CREATE_HABITS_TABLE);
    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
        // nothing to do yet, database is still version 1
    }

    public long insertNewRecord(String title, String description, int counter) {
        SQLiteDatabase db = getWritableDatabase();

        ContentValues values = new ContentValues();
        values.put(HabitEntry.COLUMN_HABIT_TITLE, title);
        values.put(HabitEntry.COLUMN_HABIT_DESC, description);
        values.put(HabitEntry.COLUMN_HABIT_COUNT, counter);

        // second parameter is _ID column which is generated by database
        long newRowId = db.insert(HabitEntry.TABLE_NAME, null, values);

        Log.v(LOG_TAG, "New row ID: " + newRowId);

        return newRowId;
    }

    public long insertNewRecord(String title, String description) {
        return this.insertNewRecord(title, description, 0);
    }

    public long insertNewRecord(String title) {
        return this.insertNewRecord(title, "", 0);
    }

    public Cursor queryAllRecords() {
        SQLiteDatabase db = getReadableDatabase();

        String[] projection = {
                HabitEntry._ID,
                HabitEntry.COLUMN_HABIT_TITLE,
                HabitEntry.COLUMN_HABIT_DESC,
                HabitEntry.COLUMN_HABIT_COUNT
        };

        return db.query(
                HabitEntry.TABLE_NAME,  // Table name
                projection,             // name of columns which should be queried
                null,                   // column names which should be selected
                null,                   // array of selection arguments
                null,                   // group by which columns
                null,                   // having clause
                null                    // sort by which columns
        );
    }
}
